// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220710165727_DB_5")]
    partial class DB_5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.Property<int>("ActorsActorId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesMovieId")
                        .HasColumnType("int");

                    b.HasKey("ActorsActorId", "MoviesMovieId");

                    b.HasIndex("MoviesMovieId");

                    b.ToTable("ActorMovie");
                });

            modelBuilder.Entity("CategoryMovie", b =>
                {
                    b.Property<int>("CategoriesCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesMovieId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesCategoryId", "MoviesMovieId");

                    b.HasIndex("MoviesMovieId");

                    b.ToTable("CategoryMovie");
                });

            modelBuilder.Entity("WebAPI.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActorName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ActorId");

                    b.ToTable("Actor");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            ActorName = "Robert Downey Jr"
                        },
                        new
                        {
                            ActorId = 2,
                            ActorName = "Paul Rudd"
                        },
                        new
                        {
                            ActorId = 3,
                            ActorName = "Scarlett Johansson"
                        },
                        new
                        {
                            ActorId = 4,
                            ActorName = "Chadwick Boseman"
                        },
                        new
                        {
                            ActorId = 5,
                            ActorName = "Chris Evans"
                        },
                        new
                        {
                            ActorId = 6,
                            ActorName = "Anthony Mackie"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Marvel"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Action & Adventure"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Sci-Fi & Fantasy"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "20th Century Fox"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("int");

                    b.Property<int>("Rated")
                        .HasColumnType("int");

                    b.Property<string>("VideoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Country = "America",
                            Description = "Very cool",
                            Duration = 120,
                            ImagePath = "Image/IronMan.jpg",
                            MovieName = "Iron Man",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/IronMan.mp4"
                        },
                        new
                        {
                            MovieId = 2,
                            Country = "America",
                            Description = "Very good",
                            Duration = 120,
                            ImagePath = "Image/SpiderMan.jpg",
                            MovieName = "Spider Man",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/SpiderMan.mp4"
                        },
                        new
                        {
                            MovieId = 3,
                            Country = "America",
                            Description = "So cool",
                            Duration = 120,
                            ImagePath = "Image/AntMan.jpg",
                            MovieName = "Ant Man",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/AntMan.mp4"
                        },
                        new
                        {
                            MovieId = 4,
                            Country = "America",
                            Description = "So cool",
                            Duration = 120,
                            ImagePath = "Image/BlackPanther.jpg",
                            MovieName = "Black Panther",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/BlackPanther.mp4"
                        },
                        new
                        {
                            MovieId = 5,
                            Country = "America",
                            Description = "So cool",
                            Duration = 120,
                            ImagePath = "Image/BlackWidow.jpg",
                            MovieName = "Black Widow",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/BlackWidow.mp4"
                        },
                        new
                        {
                            MovieId = 6,
                            Country = "America",
                            Description = "So cool",
                            Duration = 120,
                            ImagePath = "Image/CaptainAmerica.jpg",
                            MovieName = "Captain America",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/CaptainAmerica.mp4"
                        },
                        new
                        {
                            MovieId = 7,
                            Country = "America",
                            Description = "So cool",
                            Duration = 120,
                            ImagePath = "Image/CaptainMarvel.jpg",
                            MovieName = "Captain Marvel",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/CaptainMarvel.mp4"
                        },
                        new
                        {
                            MovieId = 8,
                            Country = "America",
                            Description = "So cool",
                            Duration = 120,
                            ImagePath = "Image/DoctorStrange.jpg",
                            MovieName = "Doctor Strange",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/DoctorStrange.mp4"
                        },
                        new
                        {
                            MovieId = 9,
                            Country = "America",
                            Description = "So cool",
                            Duration = 120,
                            ImagePath = "Image/Hulk.jpg",
                            MovieName = "Hulk",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/Hulk.mp4"
                        },
                        new
                        {
                            MovieId = 10,
                            Country = "America",
                            Description = "So cool",
                            Duration = 120,
                            ImagePath = "Image/ScarletWitch.jpg",
                            MovieName = "Scarlet Witch",
                            PublishedYear = 2001,
                            Rated = 12,
                            VideoPath = "Video/ScarletWitch.mp4"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@gmail.com",
                            Password = "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918",
                            RoleId = 2,
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "buingochuyen17462@gmail.com",
                            Password = "00ab9b0c4e58c5e0b039cc4f5213bfd41c2d4e00211b618bae67cc33a32e73d0",
                            RoleId = 1,
                            Username = "Huyen"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "nguyenthe.giang.775@gmail.com",
                            Password = "054f29cb6d48ccea661d6108fdcdd0a2f1d40b0141ba25fc9c684a1da873499b",
                            RoleId = 1,
                            Username = "Giang"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "thong21145@gmail.com",
                            Password = "7710e1b184cbc633d23324649f6f50c0650df3d2bbf939ed9e60763bd9610921",
                            RoleId = 1,
                            Username = "Thong"
                        });
                });

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.HasOne("WebAPI.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryMovie", b =>
                {
                    b.HasOne("WebAPI.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.HasOne("WebAPI.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebAPI.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
